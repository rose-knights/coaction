{"version":3,"sources":["app.js","new-tasks/new-task-controller.js","services/task-service.js","tasks/task-controller.js","tasks/task.js","errors/404/error-404-controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  $routeProvider.when('/new-task', {\n    controller: 'NewTaskCtrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/new-tasks/new-task.html'\n  });\n}]).controller('NewTaskCtrl', ['$location', 'taskService', 'Task', function ($location, taskService, Task) {\n\n  var self = this;\n  self.task = Task();\n\n  self.addTask = function () {\n    taskService.addTask(self.task).then(self.goToTasks);\n  }\n\n  self.goToTasks = function () {\n    $location.path('/my-tasks');\n  }\n\n\n}]);\n","app.factory('taskService', ['$http', '$log', function($http, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function post(url, task) {\n    return processAjaxPromise($http.post(url, task));\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      var data = result.data;\n      console.log(data.tasks);\n      return data.tasks;\n    })\n    .catch(function (error) {\n      $log.log(error);\n    });\n  }\n\n  return {\n    getTaskList: function () {\n      return get('/tasks/');\n    },\n\n    getTaskById: function (id) {\n      return get('/tasks/' + id);\n    },\n\n    addTask: function (task) {\n      return post('/tasks/', task);\n    }\n  };\n}]);\n","app.config(['$routeProvider', function ($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/tasks/my-tasks.html',\n    controller: 'TaskCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      tasks: ['taskService', function (taskService) {\n        return taskService.getTaskList();\n      }]\n    }\n  };\n\n  $routeProvider.when('/', routeDefinition);\n  $routeProvider.when('/my-tasks', routeDefinition);\n}])\n.controller('TaskCtrl', ['tasks', function (tasks) {\n  var self = this;\n\n  self.tasks = tasks;\n\n}]);\n","app.factory('Task', function () {\n  return function (spec) {\n    spec = spec || {};\n    return {\n      title: spec.title,\n      description: spec.description,\n      status: spec.status,\n      createdOn: spec.createdOn,\n      dueOn: spec.dueOn\n    };\n  };\n});\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n"],"sourceRoot":"/source/"}